// Triggered by librarian API. Sends extracted text to Bedrock.
//sayed hadi
const AWS = require('aws-sdk');
const bedrockruntime = new AWS.BedrockRuntime();
const s3 = new AWS.S3();

exports.handler = async (event) => {
  const extractedText = event.extractedText || 'Default extracted text from PDF';

  // Send prompt to Bedrock
  const prompt = `Generate a story based on this text: "${extractedText}"`;

  const bedrockParams = {
    modelId: process.env.BEDROCK_MODEL_ID,
    contentType: 'application/json',
    accept: 'application/json',
    body: JSON.stringify({ prompt }),
  };

  const bedrockResponse = await bedrockruntime.invokeModel(bedrockParams).promise();
  const responseBody = JSON.parse(Buffer.from(bedrockResponse.body).toString('utf8'));
  const generatedStory = responseBody.completion || 'Default story from Bedrock';

  // make the storing seperate s3, decouple because it does alot of things. else if any issue will cause it to fail.
  const key = `nova-content-${Date.now()}.txt`;
  await s3.putObject({
    Bucket: process.env.OUTPUT_BUCKET,
    Key: key,
    Body: generatedStory,
    ContentType: 'text/plain',
  }).promise();

  return {
    statusCode: 200,
    body: JSON.stringify({ message: 'Story generated by Bedrock', generatedStory }),
  };
};
