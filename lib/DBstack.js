"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DBStack = void 0;
const cdk = require("aws-cdk-lib");
const dynamodb = require("aws-cdk-lib/aws-dynamodb");
const aws_cdk_lib_1 = require("aws-cdk-lib");
class DBStack extends cdk.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        // First table in the architecture (the one that saves the extracted text)
        this.casesTable = new dynamodb.Table(this, "[ChallengeName]CaseHistory", {
            partitionKey: { name: "caseID", type: dynamodb.AttributeType.STRING },
            removalPolicy: aws_cdk_lib_1.RemovalPolicy.DESTROY, // Ensure table is deleted during stack removal
        });
        // DynamoDB Table that is used in the architecture to save the extracted text
        this.extractedTextTable = new dynamodb.Table(this, 'ExtractedTextTable', {
            partitionKey: { name: 'documentId', type: dynamodb.AttributeType.STRING },
            billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,
            removalPolicy: aws_cdk_lib_1.RemovalPolicy.DESTROY,
        });
    }
}
exports.DBStack = DBStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiREJzdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkRCc3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsbUNBQW1DO0FBQ25DLHFEQUFxRDtBQUNyRCw2Q0FBNEM7QUFHNUMsTUFBYSxPQUFRLFNBQVEsR0FBRyxDQUFDLEtBQUs7SUFLcEMsWUFBWSxLQUFjLEVBQUUsRUFBVSxFQUFFLEtBQXNCO1FBQzVELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRXhCLDBFQUEwRTtRQUMxRSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsNEJBQTRCLEVBQUU7WUFDdkUsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUU7WUFDckUsYUFBYSxFQUFFLDJCQUFhLENBQUMsT0FBTyxFQUFFLCtDQUErQztTQUN0RixDQUFDLENBQUM7UUFFQyw2RUFBNkU7UUFDL0UsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLEVBQUU7WUFDekUsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUU7WUFDekUsV0FBVyxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsZUFBZTtZQUNqRCxhQUFhLEVBQUUsMkJBQWEsQ0FBQyxPQUFPO1NBQ3JDLENBQUMsQ0FBQztJQUlMLENBQUM7Q0FDRjtBQXhCRCwwQkF3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSBcImF3cy1jZGstbGliXCI7XHJcbmltcG9ydCAqIGFzIGR5bmFtb2RiIGZyb20gXCJhd3MtY2RrLWxpYi9hd3MtZHluYW1vZGJcIjtcclxuaW1wb3J0IHsgUmVtb3ZhbFBvbGljeSB9IGZyb20gXCJhd3MtY2RrLWxpYlwiO1xyXG5pbXBvcnQgKiBhcyBzMyBmcm9tIFwiYXdzLWNkay1saWIvYXdzLXMzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgREJTdGFjayBleHRlbmRzIGNkay5TdGFjayB7XHJcbiAgcHVibGljIHJlYWRvbmx5IGNhc2VzVGFibGU6IGR5bmFtb2RiLlRhYmxlO1xyXG4gIHB1YmxpYyByZWFkb25seSBleHRyYWN0ZWRUZXh0VGFibGU6IGR5bmFtb2RiLlRhYmxlO1xyXG5cclxuXHJcbiAgY29uc3RydWN0b3Ioc2NvcGU6IGNkay5BcHAsIGlkOiBzdHJpbmcsIHByb3BzPzogY2RrLlN0YWNrUHJvcHMpIHtcclxuICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xyXG5cclxuICAgIC8vIEZpcnN0IHRhYmxlIGluIHRoZSBhcmNoaXRlY3R1cmUgKHRoZSBvbmUgdGhhdCBzYXZlcyB0aGUgZXh0cmFjdGVkIHRleHQpXHJcbiAgICB0aGlzLmNhc2VzVGFibGUgPSBuZXcgZHluYW1vZGIuVGFibGUodGhpcywgXCJbQ2hhbGxlbmdlTmFtZV1DYXNlSGlzdG9yeVwiLCB7XHJcbiAgICAgIHBhcnRpdGlvbktleTogeyBuYW1lOiBcImNhc2VJRFwiLCB0eXBlOiBkeW5hbW9kYi5BdHRyaWJ1dGVUeXBlLlNUUklORyB9LFxyXG4gICAgICByZW1vdmFsUG9saWN5OiBSZW1vdmFsUG9saWN5LkRFU1RST1ksIC8vIEVuc3VyZSB0YWJsZSBpcyBkZWxldGVkIGR1cmluZyBzdGFjayByZW1vdmFsXHJcbiAgICB9KTsgICAgXHJcblxyXG4gICAgICAgIC8vIER5bmFtb0RCIFRhYmxlIHRoYXQgaXMgdXNlZCBpbiB0aGUgYXJjaGl0ZWN0dXJlIHRvIHNhdmUgdGhlIGV4dHJhY3RlZCB0ZXh0XHJcbiAgICAgIHRoaXMuZXh0cmFjdGVkVGV4dFRhYmxlID0gbmV3IGR5bmFtb2RiLlRhYmxlKHRoaXMsICdFeHRyYWN0ZWRUZXh0VGFibGUnLCB7XHJcbiAgICAgIHBhcnRpdGlvbktleTogeyBuYW1lOiAnZG9jdW1lbnRJZCcsIHR5cGU6IGR5bmFtb2RiLkF0dHJpYnV0ZVR5cGUuU1RSSU5HIH0sXHJcbiAgICAgIGJpbGxpbmdNb2RlOiBkeW5hbW9kYi5CaWxsaW5nTW9kZS5QQVlfUEVSX1JFUVVFU1QsXHJcbiAgICAgIHJlbW92YWxQb2xpY3k6IFJlbW92YWxQb2xpY3kuREVTVFJPWSxcclxuICAgIH0pO1xyXG5cclxuXHJcblxyXG4gIH1cclxufVxyXG4iXX0=